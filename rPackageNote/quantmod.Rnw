\section{quantmod}
\subsection{获得数据}
\subsubsection{getSymbols}
<<load, message=FALSE>>=

library(quantmod)
@
设定环境，环境是一个个对象的容器，创建一个新的环境是在当前工作环境中开辟一个新的环境空间，用来存储想单独存储的变量或对象等。
<<getsymbols, message=FALSE>>=
new.environment <- new.env() #新建环境空间，存储对象
getSymbols("IBM", env = new.environment, src = 'yahoo', 
           from = "2013-10-01", to = "2013-10-23")
@
<<seeIBM>>=
get("IBM", env = new.environment)
@
\subsubsection{setSymbolLookup}
也可以通过~\textbf{setSymbolLookup}~进行设置
<<getSymbolLookup>>=
setSymbolLookup(IBM = list(name = 'IBM', src = 'yahoo'),
                USDEUR = list(name = 'USD/EUR', src = 'oanda'))
getSymbols(c('IBM', 'USDEUR'))
head(IBM)
@
\subsubsection{getFX}
获取汇率(从oanda上)
<<getFX >>=
getFX("HKD/USD", from = "2013-10-20", to = "2013-10-25",
      env = new.environment)
get('HKDUSD', env = new.environment)
@
\subsubsection{getFinancials}
<<getFinancials, eval=FALSE>>=
getFinancials("APPL")
viewFinancials(APPL.f)
@
\subsubsection{getDividends}
\em{verbose = T}显示抓取的过程。
<<getDividends, eval=FALSE >>=
getDividends("IBM", from = "2012-01-01", 
             to = "2013-10-25", verbose = T)
@
\subsection{is，has族函数}
\em{O}开盘价，\em{H}最高价，\em{L}最低价，\em{C}收盘价，\em{V}成交量
<<is >>=
is.OHLC(IBM)
is.OHLCV(IBM)
is.BBO(IBM)
is.TBBO(IBM)
is.HLC(IBM)
@
<<has >>=
has.OHLC(IBM)
has.OHLC(IBM, which = FALSE)
has.OHLC(IBM, which = TRUE)
@
\subsection{列名函数数据}
\subsubsection{OHLC,Op}
 <<colnames>>=
head(OHLC(IBM))
head(Op(IBM))
@
\subsection{计算函数}
\subsubsection{Delt}
主要是用来计算一个序列的一个阶段到另一个阶段的变化率或者计算两个序列之间的变化率
<<Delt>>=
head(Delt(Op(IBM), type = "arithmetic")) #lag 1期
head(Delt(Op(IBM), type = ("log")))
head(Delt(Op(IBM), Cl(IBM)))
@
\subsubsection{first,lasth函数}
<<first_last>>=
first(IBM)
last(IBM)
@
\subsubsection{Next函数}
<<Next>>=
head(IBM)
head(Next(IBM,1))
@
\subsubsection{to.weekly和to.monthly函数}
开盘价为一周第一天的开盘价，收盘价为一周最后一天周五的收盘价。最高价为一周中的最高价，最低价为一周中的最低价。成交量为一周总的成交量。
汇总月的类比。
<<to.weekly_to.monthly>>=
head(to.weekly(IBM))
head(to.monthly(IBM))
@